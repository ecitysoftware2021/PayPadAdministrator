@model IEnumerable<PayPlusModels.SP_GET_ARCHING_DATA_Result>

@{
    Layout = null;
}

@using Newtonsoft.Json;
@{

    PayPadAdministrator.Helpers.EncryptionHelper encryptionHelper = new PayPadAdministrator.Helpers.EncryptionHelper();
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />

</head>
<body>
    <table class="table table-striped table-bordered display nowrap">
        <tr>


            <td>
                <table class="table table-striped table-bordered display nowrap">
                    <tr>
                        <td colspan="4" align="center">
                            <label><strong>Registrar arqueo</strong></label>
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label class="form-check-label" for="materialUnchecked">Total Dispensadores</label>
                        </td>
                        <td>
                            <label class="form-check-label" for="materialUnchecked">@ViewBag.TotalDispensadores</label>
                        </td>
                        <td>
                            <label class="form-check-label" for="materialUnchecked">Total Aceptadores</label>
                        </td>
                        <td>
                            <label class="form-check-label" for="materialUnchecked">@ViewBag.TotalAceptadores</label>
                        </td>
                    </tr>
                    <tr>

                        <td>
                            @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control select2" })
                        </td>
                        <td>
                            <div class="form-check">
                                <input type="checkbox" class="form-check-input" id="ckActiveArching">
                                <label class="form-check-label" for="materialUnchecked">¿Activar Modo Arqueo?</label>
                            </div>
                        </td>
                        <td align="center">
                            <button type="button" onclick="SetCharge(@ViewBag.PayPadId)" class="btn btn-info waves-effect waves-light">Arquear</button>
                        </td>
                        <td>
                            <label class="form-check-label" for="materialUnchecked">@ViewBag.GranTotal</label>
                        </td>
                    </tr>
                    <tr>
                        <td >
                            &nbsp;
                        </td>
                    </tr>
                </table>
            </td>
        </tr>
        <tr>
            <td>
                <table class="table table-striped table-bordered display nowrap">
                    <tr>
                        <th data-field="logo">
                            Denominación
                        </th>
                        <th>
                            Cantidad Actual
                        </th>
                        <th>
                            Dispositivo
                        </th>
                        <th>
                            Total
                        </th>
                    </tr>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @if (item.IMAGE != null)
                                {
                                    var base64 = Convert.ToBase64String(item.IMAGE);
                                    var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
                                    <img src="@imgSrc" alt="Image" style="width:80px; height: auto;" />
                                }
                            </td>
                            <td>
                                @{
                                    var cantidad = 0;
                                    var totalCash = 0;
                                    var totalStak = 0;
                                    if (item.NAME.Contains("Aceptador"))
                                    {
                                        cantidad = item.CASHBOX_QUANTITY;
                                        totalCash = item.VALUE * item.CASHBOX_QUANTITY;
                                    }
                                    else
                                    {
                                        cantidad = item.STACKER_QUANTITY;
                                        totalStak = item.STACKER_QUANTITY * item.VALUE;
                                    }
                                }

                                @Html.EditorFor(modelItem => cantidad, new { htmlAttributes =
            new { @class = "form-control tochpinPrueba",
                @VAL = encryptionHelper.EncryptString(item.VALUE.ToString()),
                @CDI = encryptionHelper.EncryptString(item.CURRENCY_DENOMINATION_ID.ToString()),
                @DPDI = encryptionHelper.EncryptString(item.DEVICE_PAYPAD_DETAIL_ID.ToString()),
                @DPI = encryptionHelper.EncryptString(item.DEVICE_PAYPAD_ID.ToString()),
                @readonly = "true"
            } })
                                @Html.ValidationMessageFor(modelItem => item.CASHBOX_QUANTITY, "", new { @class = "text-danger" })
                            </td>
                            <td>
                                <label>@item.NAME</label>
                            </td>
                            <td>
                                <label>
                                    @{
                                        if (item.NAME.Contains("Aceptador"))
                                        {
                                            @totalCash.ToString("$ #,##0"); ;
                                        }
                                        else
                                        {
                                            @totalStak.ToString("$ #,##0"); ;
                                        }
                                    }
                                </label>

                            </td>


                        </tr>
                    }
                </table>
            </td>
        </tr>



       


    </table>
</body>
</html>


<script type="text/javascript">


    function SetCharge(paypadId) {
        var state = true;
        var DataDenominations=new Array();
        var userId = $("#UserId").find('option:selected').val()
        debugger
            $("input[type='number']").each(function () {
                if ($(this).val() == "") {
                    state = false;
                } else {
                    var obj = {
                        QUANTITY: $(this).val(),
                        CURRENCY_DENOMINATION_ID: $(this).attr('CDI'),
                        vALUE: $(this).attr('VAL'),
                        DEVICE_PAYPAD_DETAIL_ID: $(this).attr('DPDI'),
                        DEVICE_PAYPAD_ID: $(this).attr('DPI')
                    };
                    DataDenominations.push(obj);
                }
        });

        if (!state) {
            ModalMessageError("Error", "Todos los campos son requeridos");
            return;
        }

        if (userId=="0") {
            ModalMessageError("Error", "Debe seleccionar un usuario responsable");
            return;
        }

           var request = {
               DataDenominations: DataDenominations,
               pAYPAD_ID: paypadId,
               uSER_ID: userId,
               ActiveArching: $("#ckActiveArching").is(':checked')
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SetArchingData", "PayPads")',
                dataType: 'json',
                data: request,
                success: function (data) {
                    if (data.CodeError == 200) {
                        ModalMessageSuccess("Exitoso", data.Message);
                        location.reload();
                    } else {
                        ModalMessageError("Error", data.Message);
                        location.reload();
                    }
                },
                error: function (ex) {
                    ModalMessageError("Error", 'Failed ' + ex.responseText);
                    location.reload();
                }
            });
        }
</script>
